CREATE TABLE "users" (
  "user_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email" varchar(255) UNIQUE NOT NULL,
  "password_hash" varchar(255) NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "groups" (
  "group_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "group_name" varchar(255) NOT NULL,
  "owner_id" integer NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "group_members" (
  "member_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "group_id" integer NOT NULL,
  "user_id" integer NOT NULL,
  "status" varchar(20) NOT NULL DEFAULT 'pending',
  "joined_at" timestamp,
  "requested_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "movies" (
  "movie_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "tmdb_id" varchar(50) UNIQUE NOT NULL,
  "title" varchar(255) NOT NULL,
  "description" text,
  "poster_url" varchar(500),
  "release_year" integer,
  "genre" varchar(255),
  "tmdb_rating" float,
  "created_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "reviews" (
  "review_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer NOT NULL,
  "movie_id" integer NOT NULL,
  "review_text" text NOT NULL,
  "rating" integer NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "favorite_lists" (
  "list_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer NOT NULL,
  "list_name" varchar(255) NOT NULL,
  "share_url" varchar(255) UNIQUE,
  "is_default" boolean NOT NULL DEFAULT false,
  "created_at" timestamp NOT NULL DEFAULT (now()),
  "updated_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "favorite_list_movies" (
  "list_movie_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "list_id" integer NOT NULL,
  "movie_id" integer NOT NULL,
  "sort_order" integer NOT NULL DEFAULT 0,
  "added_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "group_movies" (
  "group_movie_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "group_id" integer NOT NULL,
  "movie_id" integer NOT NULL,
  "added_by_user_id" integer NOT NULL,
  "added_at" timestamp NOT NULL DEFAULT (now())
);

CREATE TABLE "group_showtimes" (
  "group_showtime_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "group_id" integer NOT NULL,
  "movie_id" integer,
  "theater_name" varchar(255) NOT NULL,
  "movie_title" varchar(255) NOT NULL,
  "showtime" timestamp NOT NULL,
  "finnkino_id" varchar(50),
  "added_by_user_id" integer NOT NULL,
  "added_at" timestamp NOT NULL DEFAULT (now())
);

CREATE UNIQUE INDEX ON "group_members" ("group_id", "user_id");

CREATE UNIQUE INDEX ON "reviews" ("user_id", "movie_id");

CREATE INDEX ON "favorite_lists" ("user_id", "is_default");

CREATE UNIQUE INDEX ON "favorite_list_movies" ("list_id", "movie_id");

CREATE UNIQUE INDEX ON "group_movies" ("group_id", "movie_id");

COMMENT ON COLUMN "users"."email" IS 'Käyttäjätunnus';

COMMENT ON COLUMN "users"."password_hash" IS 'Min 8 merkkiä, iso kirjain, numero';

COMMENT ON COLUMN "groups"."group_name" IS 'Ryhmän nimi';

COMMENT ON COLUMN "groups"."owner_id" IS 'Ryhmän luoja/omistaja';

COMMENT ON COLUMN "group_members"."status" IS 'pending, approved, rejected';

COMMENT ON COLUMN "movies"."tmdb_id" IS 'The Movie Database ID';

COMMENT ON COLUMN "reviews"."rating" IS '1-5 tähteä';

COMMENT ON COLUMN "favorite_lists"."list_name" IS 'Suosikkilistan nimi, esim "Omat suosikit"';

COMMENT ON COLUMN "favorite_lists"."share_url" IS 'Jaettava URI, null jos ei jaettu';

COMMENT ON COLUMN "favorite_lists"."is_default" IS 'Onko käyttäjän oletuslista';

COMMENT ON COLUMN "favorite_list_movies"."sort_order" IS 'Järjestys listassa';

COMMENT ON COLUMN "group_movies"."added_by_user_id" IS 'Kuka lisäsi';

COMMENT ON COLUMN "group_showtimes"."movie_id" IS 'Yhdistys sovelluksen elokuvaan';

COMMENT ON COLUMN "group_showtimes"."theater_name" IS 'Teatteri';

COMMENT ON COLUMN "group_showtimes"."movie_title" IS 'Elokuvan nimi Finnkino API:sta';

COMMENT ON COLUMN "group_showtimes"."showtime" IS 'Esitysaika';

COMMENT ON COLUMN "group_showtimes"."finnkino_id" IS 'Finnkino API ID';

ALTER TABLE "groups" ADD FOREIGN KEY ("owner_id") REFERENCES "users" ("user_id");

ALTER TABLE "group_members" ADD FOREIGN KEY ("group_id") REFERENCES "groups" ("group_id");

ALTER TABLE "group_members" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");

ALTER TABLE "reviews" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");

ALTER TABLE "reviews" ADD FOREIGN KEY ("movie_id") REFERENCES "movies" ("movie_id");

ALTER TABLE "favorite_lists" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");

ALTER TABLE "favorite_list_movies" ADD FOREIGN KEY ("list_id") REFERENCES "favorite_lists" ("list_id");

ALTER TABLE "favorite_list_movies" ADD FOREIGN KEY ("movie_id") REFERENCES "movies" ("movie_id");

ALTER TABLE "group_movies" ADD FOREIGN KEY ("group_id") REFERENCES "groups" ("group_id");

ALTER TABLE "group_movies" ADD FOREIGN KEY ("movie_id") REFERENCES "movies" ("movie_id");

ALTER TABLE "group_movies" ADD FOREIGN KEY ("added_by_user_id") REFERENCES "users" ("user_id");

ALTER TABLE "group_showtimes" ADD FOREIGN KEY ("group_id") REFERENCES "groups" ("group_id");

ALTER TABLE "group_showtimes" ADD FOREIGN KEY ("movie_id") REFERENCES "movies" ("movie_id");

ALTER TABLE "group_showtimes" ADD FOREIGN KEY ("added_by_user_id") REFERENCES "users" ("user_id");
